buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

allprojects {
    apply plugin: 'net.minecraftforge.gradle.forge'

    version = mod_version

    group = mod_group

    // Build name as
    archivesBaseName = mod_id + (project.is(rootProject) ? "" : project.name)

    minecraft {
        version = minecraft_version + "-" + forge_version
        runDir = "run"
        mappings = mcp_mapping_version

        replace "%mod_version%", mod_version
    }

    task ideaInfo {
        println(project.sourceSets.main.allSource.srcDirs)
    }
}

// all sub projects
subprojects {
    processResources {
        inputs.property "version", project.version
        inputs.property "mcversion", project.minecraft.version

        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            expand 'version': project.version, 'mcversion': project.minecraft.version
        }

        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
        }
    }
}

repositories {
    maven { url 'https://www.jitpack.io' }
}

dependencies {
    implementation 'com.github.MinecraftPangu:Pangu:8897292bcd'
}

// IDE Runner Settings from https://blog.ustc-zzzz.net/add-jvm-arguments-to-ide-in-forge-mod-projects/
ext.jvmArguments = [
        '-Dfml.coreMods.load=cn.mccraft.pangu.core.asm.PanguPlugin'
]

makeEclipseCleanRunClient.doFirst {
    def jvmArg = String.join(' ', jvmArguments)
    it.setJvmArguments(jvmArg)
}

makeEclipseCleanRunServer.doFirst {
    def jvmArg = String.join(' ', jvmArguments)
    it.setJvmArguments(jvmArg)
}

idea.workspace.iws.withXml {
    def runManager = it.asNode().component.find({ it.@name == 'RunManager' })
    runManager.configuration.findAll({ it.@type == 'Application' }).each {
        def mainClass = it.option.find({ it.@name == 'MAIN_CLASS_NAME' }).@value
        if (mainClass == 'GradleStart' || mainClass == 'GradleStartServer') {
            def jvmArg = String.join(' ', jvmArguments)
            it.option.find({ it.@name == 'VM_PARAMETERS' }).@value = jvmArg
        }
    }
}